name: Build Netcat for ARMv7

on:
  workflow_dispatch:  # 手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    steps:
      # Step 1: Checkout 仓库（注意这里需要有推送权限）
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: 设置交叉编译环境
      - name: Set up cross-compilation environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf make autoconf libtool

      # Step 3: 克隆 Netcat 仓库（使用另一个版本，避免找不到 Makefile 的问题）
      - name: Clone Netcat repository
        run: git clone https://github.com/andrew-codes/netcat-traditional.git

      # Step 4: Configure for ARMv7
      - name: Configure for ARMv7
        working-directory: netcat-traditional
        run: ./configure --host=arm-linux-gnueabihf

      # Step 5: Build Netcat for ARMv7
      - name: Build Netcat for ARMv7
        working-directory: netcat-traditional
        run: make

      # Step 6: 保存 ARMv7 二进制到仓库中，并通过提交保存
      - name: Save ARMv7 Binary in repository
        run: |
          # 在仓库根目录下创建 bin 目录
          mkdir -p bin
          # 复制编译得到的二进制文件到 bin 目录（根据仓库实际生成文件路径调整）
          cp netcat-traditional/nc bin/nc-armv7
          
          # 配置 Git 提交用户信息
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          
          # 添加并提交二进制文件
          git add bin/nc-armv7
          git commit -m "Add ARMv7 binary of nc"
          git push
